// This file was generated with Diez - https://diez.org
// Do not edit this file directly.

export declare class RootComponent {}

export declare class Diez<T extends RootComponent> {
  constructor (baseClass: new () => T);
  readonly component: T;
  static applyHTMLExtensions(): void;
  attach(subscriber: (component: T) => void): void;
}

export declare class Color {
  /**
   * The raw color, suitable for usage in CSS and HTML.
   */
  color: string;
  /**
   * CSS declarations for the `color` CSS property.
   */
  colorStyle: {color: string};
  /**
   * CSS declarations for the `background-color` CSS property.
   */
  backgroundColorStyle: {backgroundColor: string};
  /**
   * CSS declarations for the `border-color` CSS property.
   */
  borderColorStyle: {borderColor: string};
  /**
   * CSS declarations for the `outline-color` CSS property.
   */
  outlineColorStyle: {outlineColor: string};
}

export declare class Palette {
  background: Color;
  cardBackground: Color;
  tooltipBackground: Color;
  textPrimary: Color;
  textSecondary: Color;
  textTertiary: Color;
  textDarkContrast: Color;
  textHighEmphasis: Color;
  textLowEmphasis: Color;
  primaryColor: Color;
  primaryColorLigth: Color;
  secondaryColor: Color;
  tertiaryColor: Color;
  redColor: Color;
  orangeColor: Color;
  yellowColor: Color;
  greenColor: Color;
}

export declare class File {
  /**
   * The URL of the `File`
   */
  url: string;
}

export declare class Font {
  file: File;
  name: string;
  fallbacks: string[];
  weight: number;
  style: string;
}

export declare class Typograph {
  /**
   * An `Object` with CSS values for this `Typograph`.
   */
  style: {
    color: string,
    fontSize: string,
    fontFamily: string,
    fontWeight: number,
    fontStyle: string,
    lineHeight?: string,
    letterSpacing: number,
    textAlign: "start" | "left" | "right" | "center",
    textDecoration: string,
  };
  /**
   * Applies the `Typograph` CSS styles to the given HTMLElement.
   */
  applyStyle(ref: HTMLElement): void;
}

declare global {
  interface HTMLElement {
    /**
     * Applies a Diez Typograph definition to the element.
     *
     * You *must* have called `Diez.applyHTMLExtensions()` at least once to use this method.
     */
    applyTypograph(typograph: Typograph): void;
  }
}

export declare class DesignTypography {
  fontStyle10: Typograph;
  fontStyle9: Typograph;
  fontStyle8: Typograph;
  fontStyle7: Typograph;
  fontStyle4: Typograph;
  fontStyle3: Typograph;
  fontStyle2: Typograph;
  fontStyle1: Typograph;
  fontStyle12: Typograph;
  fontStyle11: Typograph;
  fontStyle6: Typograph;
  fontStyle5: Typograph;
}

export declare class Images {
}

export declare class Margin {
  top: number;
  bottom: number;
  left: number;
  right: number;
}

export declare class LayoutValues {
  spacingSmall: number;
  spacingMedium: number;
  spacingLarge: number;
  contentMargin: Margin;
}

export declare class Strings {
  title: string;
  caption: string;
  helper: string;
  fontFamilies: string;
}

export declare class Shadows {
}

export declare class DesignLanguage extends RootComponent {
  palette: Palette;
  typography: DesignTypography;
  images: Images;
  layoutValues: LayoutValues;
  strings: Strings;
  shadows: Shadows;
}

